
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
        <link rel="shortcut icon" href="/images/logo.ico">
        <link rel="stylesheet" href="/stylesheets/login.css">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
            integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>
</head>
<body>
    <div class="flash" style="position: fixed;z-index: 4;width: 100%;">
        <%- include('./partials/flash') %>
    </div>

    <div class="row">
        <div class="col-lg-6 d-none d-xxl-block stage">
        </div>
        <div class="col-lg-6">
<div class="card1">
    <div class="card" >
        <div class="login_file has-validation">
        <h2 class="card-title text-center">Login</h2>
        <form action="/user/login" method="post" autocomplete="off" class="needs-validation" novalidate>
            <div class="row g-3">
                <div class="col">
                    <input type="email" class="form-control" placeholder="Enter Email" aria-label="email" id="username"
                        name="username" required >

                </div>
            </div>
            <div class="row g-3">
                <div class="col">
<div class="input-group mb-3">

    <input type="password" class="form-control" id="password" name="password" placeholder="Enter Password"
        aria-label="Enter Password" required>
        <div class="input-group-text">
            <input class="form-check-input mt-0" id="check" type="checkbox" value="" aria-label="Checkbox for following text input">
            <span>&nbsp;Show</span>
        </div>
</div>


                </div>

            </div>


            <div class="row g-3">
                <div class="col has-validation">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a class="btn btn-primary" href="/user/register">Register</a>
                    <a class="btn btn-primary" href="/user/auth/google">Sign in <img src="../images/google.svg" alt="google" width="18px" height="18px"></a>
                </div>
                <a href="/user/forgot" class="link">Forgot Your Password?</a>
            </div>

        </form>
        </div>
    </div>
</div>
</div>



<script type="module">
    import * as THREE from 'https://cdn.jsdelivr.net/npm/three@0.121.1/build/three.module.js';
      import { GLTFLoader } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/loaders/GLTFLoader.js';

      const scene = new THREE.Scene();
      const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.01,
        1000
      );

      const renderer = new THREE.WebGLRenderer({
        alpha: true,
        antialias: true,
      });
      renderer.setClearColor(0x000000, 0);
      renderer.setSize(window.innerWidth, window.innerHeight);
      // const light = new THREE.AmbientLight(0xffffff);
      var light = new THREE.HemisphereLight(0xffffff, 0x000000, 2);
      light.intensity = 4;
      scene.add(light);
      stage.appendChild(renderer.domElement);
      const loader = new GLTFLoader();
      let obj;
      loader.load(
        '/images/untitled.glb',
        function (gltf) {
          obj = gltf.scene;
          obj.translateX(-2.5);
          obj.translateY(-1);
          scene.add(gltf.scene);
        },
        undefined,
        function (error) {
          console.error(error);
        }
      );
      let obj2;
      const loader1 = new GLTFLoader();
      loader1.load(
        '/images/logo_out1.glb',
        function (gltf) {
          obj2 = gltf.scene;
          obj2.translateX(-1);
          obj2.translateZ(3);
          obj2.translateY(1.5);
          obj2.rotation.y = 0
          obj2.rotation.x = 20.5
          scene.add(gltf.scene);
        },
        undefined,
        function (error) {
          console.error(error);
        }
      );
      camera.position.set(0, 1, 5);

      function animate() {
        requestAnimationFrame(animate);
        // obj.rotation.y += 0.01
        obj.rotation.y += 0.01;
        obj2.rotation.z -= 0.01;
        renderer.render(scene, camera);
      }
      animate();
      </script>
      <script src="/js/validation.js"></script>
      <script src="/js/login.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
        crossorigin="anonymous"></script>
</body>
</html>